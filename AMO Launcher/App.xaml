<Application x:Class="AMO_Launcher.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:AMO_Launcher"
             DispatcherUnhandledException="Application_DispatcherUnhandledException">
    <Application.Resources>
        <!-- Application-wide resources -->
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- Add any style dictionaries here -->
            </ResourceDictionary.MergedDictionaries>

            <!-- Color Palette (Vibrant AMO Colors) -->
            <Color x:Key="PrimaryColor">#050505</Color>
            <!-- Almost Black Background -->
            <Color x:Key="SecondaryColor">#121212</Color>
            <!-- Dark Gray -->
            <Color x:Key="AccentColorLight">#FFD18A</Color>
            <!-- Vibrant Light Gold -->
            <Color x:Key="AccentColor">#F5A686</Color>
            <!-- Vibrant Rose Gold Mid -->
            <Color x:Key="AccentColorDark">#E57B6F</Color>
            <!-- Vibrant Dark Rose Gold -->
            <Color x:Key="NeutralDarkColor">#1A1A1A</Color>
            <!-- Medium Gray -->
            <Color x:Key="NeutralLightColor">#F0F0F0</Color>
            <!-- Light Gray -->
            <Color x:Key="ErrorColor">#FF4444</Color>
            <!-- Error Red -->

            <!-- Brushes -->
            <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}"/>
            <SolidColorBrush x:Key="SecondaryBrush" Color="{StaticResource SecondaryColor}"/>
            <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}"/>
            <SolidColorBrush x:Key="AccentLightBrush" Color="{StaticResource AccentColorLight}"/>
            <SolidColorBrush x:Key="AccentDarkBrush" Color="{StaticResource AccentColorDark}"/>
            <SolidColorBrush x:Key="NeutralDarkBrush" Color="{StaticResource NeutralDarkColor}"/>
            <SolidColorBrush x:Key="NeutralLightBrush" Color="{StaticResource NeutralLightColor}"/>
            <SolidColorBrush x:Key="ErrorBrush" Color="{StaticResource ErrorColor}"/>
            <SolidColorBrush x:Key="TextBrush" Color="White"/>
            <SolidColorBrush x:Key="TextSecondaryBrush" Color="#BBBBBB"/>

            <!-- Gradient Brushes -->
            <LinearGradientBrush x:Key="HeaderGradientBrush" StartPoint="0,0" EndPoint="1,0">
                <GradientStop Color="{StaticResource PrimaryColor}" Offset="0.0"/>
                <GradientStop Color="{StaticResource SecondaryColor}" Offset="1.0"/>
            </LinearGradientBrush>

            <!-- Vibrant AMO Gold Gradient (Top to Bottom) -->
            <LinearGradientBrush x:Key="AMOGoldGradient" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="#FFD18A" Offset="0.0"/>
                <GradientStop Color="#F5A686" Offset="0.7"/>
                <GradientStop Color="#E57B6F" Offset="1.0"/>
            </LinearGradientBrush>

            <!-- Vibrant AMO Gold Gradient (Left to Right) -->
            <LinearGradientBrush x:Key="AMOGoldGradientHorizontal" StartPoint="0,0" EndPoint="1,0">
                <GradientStop Color="#FFD18A" Offset="0.0"/>
                <GradientStop Color="#F5A686" Offset="0.7"/>
                <GradientStop Color="#E57B6F" Offset="1.0"/>
            </LinearGradientBrush>

            <!-- AMO Background Pattern -->
            <DrawingBrush x:Key="GeometricBackground" TileMode="Tile" Viewport="0,0,100,100" ViewportUnits="Absolute">
                <DrawingBrush.Drawing>
                    <DrawingGroup>
                        <GeometryDrawing Brush="#0A0A0A">
                            <GeometryDrawing.Geometry>
                                <RectangleGeometry Rect="0,0,100,100"/>
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                        <GeometryDrawing Brush="#080808">
                            <GeometryDrawing.Geometry>
                                <PathGeometry>
                                    <PathFigure StartPoint="0,0">
                                        <LineSegment Point="50,50"/>
                                        <LineSegment Point="0,100"/>
                                        <LineSegment Point="0,0"/>
                                    </PathFigure>
                                </PathGeometry>
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                        <GeometryDrawing Brush="#080808">
                            <GeometryDrawing.Geometry>
                                <PathGeometry>
                                    <PathFigure StartPoint="100,0">
                                        <LineSegment Point="50,50"/>
                                        <LineSegment Point="100,100"/>
                                        <LineSegment Point="100,0"/>
                                    </PathFigure>
                                </PathGeometry>
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingGroup>
                </DrawingBrush.Drawing>
            </DrawingBrush>

            <!-- Button styles -->
            <Style x:Key="PrimaryButton" TargetType="Button">
                <Setter Property="Background" Value="{StaticResource AMOGoldGradient}"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="15,8"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                                    CornerRadius="2"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="1" BlurRadius="3" Opacity="0.3" Color="#F5A686"/>
                                </Border.Effect>
                                <Grid>
                                    <ContentPresenter HorizontalAlignment="Center" 
                                                      VerticalAlignment="Center"
                                                      Margin="{TemplateBinding Padding}"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="0.9"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Opacity" Value="0.8"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SecondaryButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                <Setter Property="Padding" Value="15,8"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                                    CornerRadius="2"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter HorizontalAlignment="Center" 
                                                  VerticalAlignment="Center"
                                                  Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#66000000"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#66F5A686"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="BorderBrush" Value="#666666"/>
                                    <Setter Property="Foreground" Value="#666666"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ActionButton" TargetType="Button">
                <Setter Property="Background" Value="{StaticResource NeutralDarkBrush}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="15,8"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                                    CornerRadius="2"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter HorizontalAlignment="Center" 
                                                  VerticalAlignment="Center"
                                                  Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#333333"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#111111"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="#555555"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- ListViewItem Style -->
            <Style TargetType="ListViewItem">
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="Padding" Value="8,6"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <Border x:Name="Border" 
                                Background="{TemplateBinding Background}"
                                BorderThickness="0" 
                                CornerRadius="0"
                                Padding="{TemplateBinding Padding}">
                                <!-- This ContentPresenter preserves the item's content -->
                                <GridViewRowPresenter x:Name="RowPresenter" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#1AFD9A69" TargetName="Border"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#222222" TargetName="Border"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- CheckBox Style (AMO Gold) -->
            <Style x:Key="ModCheckBox" TargetType="CheckBox">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Border x:Name="checkboxBorder" 
                                    BorderBrush="#444444" 
                                    BorderThickness="1"
                                    CornerRadius="2"
                                    Width="20" Height="20">
                                <Border x:Name="checkMark" 
                                        Background="{StaticResource AMOGoldGradient}"
                                        Opacity="0" CornerRadius="1"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Opacity" Value="1" TargetName="checkMark"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- GridView Header Style -->
            <Style x:Key="GridViewColumnHeaderStyle" TargetType="GridViewColumnHeader">
                <Setter Property="Background" Value="{StaticResource SecondaryBrush}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Padding" Value="10,8"/>
                <Setter Property="BorderThickness" Value="0,0,1,0"/>
                <Setter Property="BorderBrush" Value="#333333"/>
                <Setter Property="Cursor" Value="Arrow"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Grid>
                                <!-- Main header content -->
                                <Border x:Name="HeaderBorder"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter x:Name="HeaderContent"
                                                      Margin="{TemplateBinding Padding}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                                
                                <!-- Bottom accent line that appears on hover -->
                                <Border x:Name="AccentBar" 
                                        Height="2" 
                                        VerticalAlignment="Bottom" 
                                        Background="{StaticResource AccentBrush}" 
                                        Opacity="0"/>
                                
                                <!-- Right edge resize grip - SMALLER SIZE AND LESS VISIBLE -->
                                <Thumb x:Name="PART_HeaderGripper"
                                       Width="8"
                                       HorizontalAlignment="Right"
                                       Cursor="SizeWE"
                                       Opacity="0"
                                       Background="Transparent"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#1A1A1A" TargetName="HeaderBorder"/>
                                    <Setter Property="Opacity" Value="1" TargetName="AccentBar"/>
                                    <Setter Property="Opacity" Value="0.0" TargetName="PART_HeaderGripper"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Tab Style -->
            <Style x:Key="ModTabStyle" TargetType="Button">
                <Setter Property="Background" Value="{StaticResource SecondaryBrush}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="20,10"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Margin="{TemplateBinding Padding}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- CheckBox Style -->
            <Style TargetType="CheckBox">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Grid>
                                <Border x:Name="checkboxBorder" 
                                        BorderBrush="#444444" 
                                        BorderThickness="1"
                                        CornerRadius="2"
                                        Width="20" Height="20"
                                        Background="Transparent">
                                    <Path x:Name="checkMark" 
                                          Data="M1,5 L4,9 L9,1" 
                                          Stroke="{StaticResource AccentBrush}"
                                          StrokeThickness="2"
                                          Visibility="Collapsed"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Visibility" Value="Visible" TargetName="checkMark"/>
                                    <Setter Property="Background" Value="{StaticResource PrimaryBrush}" TargetName="checkboxBorder"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" TargetName="checkboxBorder"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- SelectedModTab Style -->
            <Style x:Key="ModTabStyleSelected" TargetType="Button" BasedOn="{StaticResource ModTabStyle}">
                <Setter Property="Background" Value="{StaticResource AMOGoldGradient}"/>
            </Style>

            <!-- Context Menu Style -->
            <Style x:Key="ModContextMenuStyle" TargetType="ContextMenu">
                <Setter Property="Background" Value="#222222"/>
                <Setter Property="BorderBrush" Value="#444444"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ContextMenu">
                            <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="3" BlurRadius="5" Opacity="0.3" Color="Black"/>
                                </Border.Effect>
                                <StackPanel IsItemsHost="True" Margin="{TemplateBinding Padding}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Context Menu Item Style -->
            <Style x:Key="ModContextMenuItemStyle" TargetType="MenuItem">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Padding" Value="8,6"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="MenuItem">
                            <Border x:Name="MenuItemBorder" 
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        CornerRadius="2"
                        Margin="1">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- Icon placeholder -->
                                    <ContentPresenter x:Name="Icon" 
                                          ContentSource="Icon" 
                                          VerticalAlignment="Center" 
                                          HorizontalAlignment="Center"
                                          Width="16" Height="16"
                                          Margin="0,0,8,0"/>

                                    <!-- Menu item header text -->
                                    <ContentPresenter Grid.Column="1" 
                                          ContentSource="Header" 
                                          VerticalAlignment="Center" 
                                          HorizontalAlignment="Left"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="MenuItemBorder" Property="Background" Value="{StaticResource AMOGoldGradient}"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Custom ScrollBar Style -->
            <Style x:Key="ModernScrollBarThumb" TargetType="{x:Type Thumb}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border x:Name="ThumbBorder" 
                        Background="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" 
                        CornerRadius="3" 
                        Opacity="0.6"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="ThumbBorder" Property="Opacity" Value="0.9"/>
                                </Trigger>
                                <Trigger Property="IsDragging" Value="true">
                                    <Setter TargetName="ThumbBorder" Property="Opacity" Value="1.0"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- ScrollBar Button Style (Arrows) -->
            <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border x:Name="ButtonBorder" 
                        Background="Transparent" 
                        Opacity="0"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- ScrollBar PageUpDown Button Style -->
            <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="Transparent"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Main ScrollBar Style -->
            <Style TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
                <Setter Property="Background" Value="#25FFFFFF"/>
                <Setter Property="Width" Value="8"/>
                <Setter Property="MinWidth" Value="8"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="GridRoot" Width="8" Background="Transparent">
                                <Track x:Name="PART_Track" IsDirectionReversed="true">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ModernScrollBarThumb}"/>
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand"/>
                                    </Track.IncreaseRepeatButton>
                                </Track>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Orientation" Value="Horizontal">
                                    <Setter TargetName="GridRoot" Property="Height" Value="8"/>
                                    <Setter TargetName="GridRoot" Property="Width" Value="Auto"/>
                                    <Setter TargetName="PART_Track" Property="IsDirectionReversed" Value="false"/>
                                    <Setter TargetName="PART_Track" Property="Orientation" Value="Horizontal"/>
                                    <Setter Property="Height" Value="8"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="Height" Value="8"/>
                        <Setter Property="MinHeight" Value="8"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- ScrollViewer style to apply the custom scrollbar -->
            <Style TargetType="{x:Type ScrollViewer}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <ScrollContentPresenter Grid.Column="0" Grid.Row="0"/>

                                <ScrollBar x:Name="PART_VerticalScrollBar"
                               Grid.Column="1" Grid.Row="0"
                               Value="{TemplateBinding VerticalOffset}"
                               Maximum="{TemplateBinding ScrollableHeight}"
                               ViewportSize="{TemplateBinding ViewportHeight}"
                               Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

                                <ScrollBar x:Name="PART_HorizontalScrollBar"
                               Orientation="Horizontal"
                               Grid.Column="0" Grid.Row="1"
                               Value="{TemplateBinding HorizontalOffset}"
                               Maximum="{TemplateBinding ScrollableWidth}"
                               ViewportSize="{TemplateBinding ViewportWidth}"
                               Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>